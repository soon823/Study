<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mapper.BoardMapper">
  <!-- select id = 메소드이름 -->
  <!-- resultType,parameterType = 반환타입(클래스경로) ,mybatis-config.xml에서 <typeAlias alias="member" type="com.yedam.vo.MemberVO"/> 작성으로 경로대신 alias사용-->
  <select id="boardList" resultType="board">
    select board_no
    	  ,title
    	  ,content
    	  ,writer
    	  ,view_cnt
    	  ,write_date
    	  ,update_date
    from tbl_board
    order by board_no
  </select>
  
  <select id="listWithPage" parameterType="com.yedam.common.SearchDTO">
  	select b.*
	from(select rownum rn, a.*
    	from (select * 
      	  from tbl_board
      	  <where>
      	  <choose>
      	  	<when test="searchCondition == 'T'.toString()">
	      	 	title like '%'||#{keyword}||'%'
      	  	</when>
      	  	<when test="searchCondition == 'W'.toString()">
      	  		writer like '%'||#{keyword}||'%'
      	  	</when>
      	  	<when test="searchCondition == 'TW'.toString()">
      	  		(title like '%'||#{keyword}||'%') or (writer like '%'||#{keyword}||'%')
      	  	</when>
      	  </choose>
      	  </where> 
		  order by board_no desc)a) b
	where b.rn > (#{page} - 1) * 5
	<![CDATA[	
	and b.rn <= (#{page} * 5)
	]]>
  </select>
  
  <!-- ; <= 구문오류를 발생 -->
  <insert id="insertBoard" parameterType="board">
  	insert into tbl_board (board_no ,title ,content ,writer, img)
	values (board_seq.nextval, #{title}, #{content} ,#{writer}, #{img})
  </insert>
  
  <update id="updateBoard" parameterType="board">
  	update tbl_board 
  	set update_date = sysdate
  	<if test="title != null">
  		,title = #{title}
  	</if>
  	<if test="content != null">
  		,content = #{content}
  	</if>
  	where board_no = #{boardNo}
  </update>
  
  <delete id="deleteBoard" parameterType="int">
  	delete from tbl_board
  	where board_no = #{boardNo}
  </delete>
  
  <select id="selectBoard" parameterType="int">
  	select board_no
    	  ,title
    	  ,content
    	  ,writer
    	  ,view_cnt
    	  ,write_date
    	  ,update_date
    	  ,img
    from tbl_board
    where board_no = #{boardNo}
  </select>
  
  <!-- 조회수 -->
  <update id="updateCount" parameterType="int">
  	update tbl_board
  	set view_cnt = view_cnt + 1
  	where board_no = #{boardNo}
  </update>
  
  <!-- 페이징 카운트 -->
  <select id="selectCount" resultType="int">
  	select count(1)
  	from tbl_board
  	<where>
   	  <choose>
   	  	<when test="searchCondition == 'T'.toString()">
    	 	title like '%'||#{keyword}||'%'
   	  	</when>
   	  	<when test="searchCondition == 'W'.toString()">
   	  		writer like '%'||#{keyword}||'%'
   	  	</when>
   	  	<when test="searchCondition == 'TW'.toString()">
   	  		(title like '%'||#{keyword}||'%') or (writer like '%'||#{keyword}||'%')
   	  	</when>
   	  </choose>
   	  </where>
  </select>
  
  <select id="countByWriter" resultType="hashmap"> 
	select writer as "writer", member_name as "member_name", count(1) as "count"
	from tbl_board b
	join tbl_member m
	on b.writer = m.member_id
	group by writer, member_name
  </select>
  
  
</mapper>